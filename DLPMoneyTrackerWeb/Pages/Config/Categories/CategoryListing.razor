@page "/Config/Category"
@using DLPMoneyTracker.Data.ConfigModels;

@inject EditCategoryService viewModel


<!-- Save/Cancel Buttons -->
<div class="top-row px-4">
    <button type="button" @onclick="@((e) => AddNewCategory())"><img class="action-btn" src="icons\Add-New-256.png" alt="Add New" /></button>
</div>

<AddEditCategory @ref="popupEdit" />

<!-- Grid -->
<section id="gridCategory">
    <div class="row">
        <table>
            <thead>
                <tr>
                    <th>Category Name</th>
                    <th>Category Type</th>
                    <th><!-- Action buttons --></th>
                </tr>
            </thead>
            <tbody>
                @if (viewModel.Categories?.Count > 0)
                {
                    int rowCount = 0;
                    foreach (var cat in viewModel.Categories)
                    {
                        rowCount++;

                        <tr style="@string.Format("background-color: {0};", (rowCount % 2 == 0) ? "lightyellow" : "white")">
                            <td>@cat.Name</td>
                            <td>@cat.CategoryType.ToDisplayText()</td>
                            <td>
                                <button type="button" @onclick="@((e) => LoadCategory(cat.ID))"><img class="action-btn" src="icons\Edit-Pencil-256.png" alt="Edit Category" /></button>
                                <button type="button" @onclick="@((e) => DeleteCategory(cat.ID))"><img class="action-btn" src="icons\Garbage-Closed-256.png" alt="Delete Category" /></button>
                            </td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>
</section>


<!-- Editing Controls -->
<!-- This should be a separate control in a sliding drawer or pop-up -->



@code {
    private AddEditCategory popupEdit;
    private TransactionCategory _editCategory;

    private void AddNewCategory()
    {
        _editCategory = new TransactionCategory();
        popupEdit.Show(_editCategory);
    }

    private void LoadCategory(Guid catId)
    {
        _editCategory = viewModel.GetCategory(catId);
        popupEdit.Show(_editCategory);
    }

    private void DeleteCategory(Guid catId)
    {
        viewModel.DeleteCategory(catId);
        StateHasChanged();
    }

    private void DiscardChanges()
    {
        viewModel.ReloadCategories();
        StateHasChanged();
    }
 
}
